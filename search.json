[{"categories":["snippets"],"content":"A few months ago, friend of mine1 asked on Discord “Does someone wanna to participate in a game jam?”. At first, I was like “wtf”, however following thoughts were “Yes, I wanna to do something creative in my life”.\nBy accident, we won it, and now I’m taking part in development process and we are preparing a release of Martial Law on Steam and Microsoft Store edition — UWP version released there is going to be released on Xbox only2\nWhether gamedev wasn’t an attractive field for me in IT field, I like to do everything that isn’t feel like true gamedev — I will try to summarize all effects worth sharing on this blog in following weeks.\ncase Your workflow process heavily depends on debug mode enabled in Godot, however you don’t want to commit it3. In technical terms, we don’t want line\n1  debug_mode=true   to appear in project.godot\nresearch Debug? I never heard something like that Approach that was an option, but I haven’t chosen it due to possibility of intentional testing of debug release with our beloved beta-testers4. Scripts in CI/CD env5 may just use sed to always build a production build\nDebug? GTFO Another way that I chose there is git pre-commit hook. It might be irritating at first, however it seems like a better solution — as you can see by frequency of posting there I’m rather lazy person, so this allows to easily bypass it whenever I want it.\nSolution Add following snippet as .git/hook/pre-commit\n1 2 3 4 5 6  #!/bin/bash if grep -Fxq \"debug_mode=true\" project.godot; then echo Debug mode is enabled, commit rejected echo \"Disable it if you wanna have happy testers :-)\" exit 1 fi   I’m running it on Windows and unexpectedly — it works6.\nStay tuned for future gamedev-maybe-related tricks!\n  Arek, CEO of FIXER Group. ↩︎\n And it might be a very painful process due to low popularity of that target. ↩︎\n In our case it is a continuous deployment, that publish code from branch to steam and debug-dependent solutions which speed up developing process and ruins end-user experience. ↩︎\n If you are interested in what ruins an end-user experience - this is a cutscene that runs in 12x speed. I saw it too many times. ↩︎\n Its Jenkins here. ↩︎\n My git is from scoop. Ported which nor where from PowerShell haven’t found any bash on my computer, so I assume that might be built in from git itself. ↩︎\n   ","description":"","tags":["bash","windows","git","godot","Martial Law"],"title":"Godot pre-commit hook on Windows - no more commits with debug mode enabled","uri":"/faq/godot-pre-commit-hook/"},{"categories":["efforts"],"content":"Short answer - nope, there will be only smoke instead.1\nAfter a long rehab-break2, I got back to messing around. I wanted to create VM environment that is easy to manage – having in mind how my setup looks like(dell with nvme + HDD) I wanted to utilise hard drive in smart way - first idea came through my past experience with qubes operating system[^qubes], where LVM thin provisioning were used in order to manage virtual drives and snapshots – moreover, in my scenario vagrant would be the tool that speeds up defining and configuring instances.\nSo, after countless steps like creating LVM pool, installing vagrant-libvirt plugin3, vagrant doesn’t want to cooperate due to Snapshots of snapshots are not supported. . Error which is related with a 4-year-old open issue. If you look closely again into appropriate place 3 we can notice that there is an option to specify another pool name - just for curiosity I tested if another pool(directory based on ext4 partition) would be a hotfix - but not this time. Due to vagrant internals snapshot is created, but this time with Invalid path for Logical Volume. error while executing lvcreate.\nSo, maybe a ZFS-based pool would be the answer? 🤔 [^zfs]\n  This seems like an old reference ↩︎\n It might be a matter of another entry. ↩︎\n In case if you are asking - yes, their documentation mentions use case where you would like to specify storage pool name. ↩︎\n  ","description":"","tags":["LVM","KVM","vagrant"],"title":"Will vagrant, KVM and LVM blend in 2020?","uri":"/faq/will-vagrant-lvm-kvm-blend-in-2020/"},{"categories":null,"content":"Yet another approach to blogging. This time in static manner, based on hugo(again?) - this time with bigger expertise than last time.\n","description":"","tags":["meta"],"title":"Reboot","uri":"/personal/reboot/"},{"categories":null,"content":"Page about me.\nStroke I’m lucky enough to name myself an stroke survivor.\n","description":"","tags":null,"title":"About","uri":"/about/"}]
